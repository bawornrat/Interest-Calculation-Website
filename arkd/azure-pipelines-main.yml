# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '77a8dcc7-1096-4b62-9a8d-8013df580cdc'

  # Web app name
  webAppName: 'arkd'

  # Environment name
  environmentName: 'webappm2u'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '20.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run test --if-present
      displayName: 'npm install, build and test'

    - task: PublishTestResults@2
      condition: always()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-results/jest/*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)'


    - task: PublishCodeCoverageResults@1
      condition: always()
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '**/coverage/cobertura-coverage.xml'
    
    - task: CmdLine@2
      condition: always()
      inputs:
        script: |
          echo "Clean folder"
          rm -rfv package-lock.json
          rm -rfv .git
          rm -rfv test-results
          rm -rfv coverage
          ls -l 

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      condition: always()
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      condition: always()
      artifact: drop

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure for Students (98c5eff1-d5a4-463e-a699-a4ce6d8b6f23)'
        appType: 'webAppLinux'
        WebAppName: 'arkd'
        packageForLinux: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        RuntimeStack: 'NODE|18-lts'
        StartupCommand: 'npm run start'